 FAIL  shared/__tests__/combat-system.test.ts (22.768 s)
  ● Combat System › Combat Processing › should process combat ticks and execute ready actions

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 2
    Received array:  [{"action": {"cooldown": 2000, "damage": 20, "executionTime": 1000, "id": "basic_attack", "name": "Attack", "range": 15, "targetType": "single", "type": "attack"}, "entityId": "player", "executesAt": 1749335645800, "queuedAt": 1749335644800, "targetId": "enemy", "targetPosition": undefined}, {"action": {"cooldown": 2000, "damage": 20, "executionTime": 1000, "id": "basic_attack", "name": "Attack", "range": 15, "targetType": "single", "type": "attack"}, "entityId": "enemy", "executesAt": 1749335645851, "queuedAt": 1749335644851, "targetId": "player", "targetPosition": undefined}]

      217 |         
      218 |         // Action should be executed and removed from queue
    > 219 |         expect(finalState.actionQueue).toHaveLength(0);
          |                                        ^
      220 |         
      221 |         // Enemy should have taken damage
      222 |         const enemy = finalState.entities.find(e => e.id === 'enemy');

      at Timeout._onTimeout (shared/__tests__/combat-system.test.ts:219:40)

  ● Combat System › Combat Processing › should process combat ticks and execute ready actions

    thrown: "Exceeded timeout of 5000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      204 |     });
      205 |
    > 206 |     it('should process combat ticks and execute ready actions', (done) => {
          |     ^
      207 |       // Queue an action with very short execution time
      208 |       combatSystem.queueAction('player', 'basic_attack', 'enemy');
      209 |       

      at shared/__tests__/combat-system.test.ts:206:5
      at shared/__tests__/combat-system.test.ts:176:3
      at Object.<anonymous> (shared/__tests__/combat-system.test.ts:4:1)

  ● Combat System › Distance and Positioning › should get correct entry positions

    expect(received).toBeGreaterThan(expected)

    Expected: > 90
    Received:   10

      257 |
      258 |       expect(northEntry.y).toBeGreaterThan(southEntry.y); // North entry should be lower on screen
    > 259 |       expect(eastEntry.x).toBeGreaterThan(westEntry.x); // East entry should be more to the right
          |                           ^
      260 |     });
      261 |
      262 |     it('should move entities to exact positions', () => {

      at Object.<anonymous> (shared/__tests__/combat-system.test.ts:259:27)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.